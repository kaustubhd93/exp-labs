Parameters:
  SecurityGroupDescription:
    Type: String
    Default: 'Enable SSH access via port 22'

  SecurityGroupPort:
    Type: Number
    Default: 22

  InstanceType:
    Type: String
    Default: t3.nano
    AllowedValues:
      - t3.micro
      - t3.nano
      - t3.small
      - t3.medium
      - t3a.nano
      - t3a.micro
      - t3a.small
      - t3a.medium
    ConstraintDescription: Must be a valid EC2 instance type.

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be a valid EC2 key pair.

  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id
    ConstraintDescription: Must be a valid EC2 image ID.

  VPCId:
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: Must be a valid VPC ID.

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    ConstraintDescription: Must be a valid subnet ID.

  CidrIp:
    Type: String
    Default: ''

  RootVolumeSize:
    Type: Number
    Default: 8
    ConstraintDescription: Must be a valid EBS volume size

Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !GetAtt MySecurityGroup.GroupId
      SubnetId: !Ref SubnetId
      BlockDeviceMappings:
        - DeviceName: '/dev/sda1'
          Ebs:
            VolumeSize: !Ref RootVolumeSize
            VolumeType: gp3

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref SecurityGroupPort
          ToPort: !Ref SecurityGroupPort
          CidrIp: !Ref CidrIp
      VpcId: !Ref VPCId
